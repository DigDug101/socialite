<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
	
	<binding id="socialitebar" extends="chrome://global/content/bindings/notification.xml#notification">
		<content>
			<xul:hbox anonid="container" flex="1" align="center">
				<xul:hbox anonid="siteBox" flex="1" align="center">
					<xul:image anonid="siteImage"/>
					<xul:label anonid="siteLink" class="text-link"/>
				</xul:hbox>
				<xul:separator width="0px" height="18px" orient="vertical" class="socialite-separator"/>
				<xul:deck anonid="contentDeck" align="center">
					<children/>
				</xul:deck>
			</xul:hbox>
		</content>
		
		<implementation>
			<field name="content"/>
			
			<method name="addSiteContent">
				<parameter name="siteContent"/>
        <body>
          <![CDATA[
          	this.content.push(siteContent);
						this.appendChild(siteContent);
						siteContent.update();
          ]]>
        </body>
      </method>
      
     	<method name="update">
        <body>
          <![CDATA[
          	this.content.forEach(function(siteContent, index, array) {
					    siteContent.update();
					  });
          ]]>
        </body>
      </method>
		</implementation>
		
	</binding>

	<binding id="socialitebarcontent">
		<content>
			<xul:hbox anonid="container" flex="1" align="center">
				<xul:description anonid="title" flex="1"/>
				<xul:spacer flex="1"/>
				<children/>
			</xul:hbox>
		</content>
		
		<implementation>
      <field name="linkInfo"/>
      <field name="uiState">
      	new Components.utils.import("resource://socialite/linkInfo.jsm").LinkInfoState();      	
      </field>
      
      <method name="update">
        <body>
          <![CDATA[
						var title = document.getAnonymousElementByAttribute(this, "anonid", "title");
						title.text = this.uiState.title;
          ]]>
        </body>
      </method>
      
			<method name="updateState">
				<parameter name="omit"/>
				<body>
          <![CDATA[
          	this.uiState.copy(this.linkInfo.state, omit);
          ]]>
				</body>
			</method>
			
			<method name="revertState">
				<parameter name="properties"/>
				<parameter name="timestamp"/>
				<body>
          <![CDATA[
					  for (var i=0; i<properties.length; i++) {
					    var prop = properties[i];
					    
					    // If the uiState hasn't been updated since the timestamp, revert it.
					    if ((timestamp == null) || (timestamp >= this.uiState.getTimestamp(prop))) {
					      this.uiState[prop] = this.state[prop];
					    } else {
						    // Modified since revert timestamp, skipping revert.
					    }
					  }
          ]]>
				</body>
			</method>
			
		</implementation>
	</binding>
	
</bindings>